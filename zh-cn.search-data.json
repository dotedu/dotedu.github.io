{"/_index.fa/":{"data":{"":" آزاد، متن‌باز ساخت وب‌سایت‌های مدرن با مارک‌داون و هیوگو تم هیوگو سریع و دارای امکانات کامل برای ایجاد وب‌سایت‌های استاتیک زیبا شروع کنید سریع و با امکانات کامل ساده و آسان برای استفاده، در عین حال قدرتمند و غنی از ویژگی‌ها متنوع.\nمارک‌داون تنها چیزی است که شما نیاز دارید فقط با مارک‌داون بنویسید. تکمیل و کامل با کامپوننت‌های کد کوتاه.\nجستجوی کامل متن جستجوی متن کامل داخلی با FlexSearch، بدون نیاز به نصب موارد اضافی.\nسبک مانند یک پر برای استفاده از هگزترا به هیچ وابستگی یا Node.js نیاز نیست. با پشتیبانی از هیوگو، یکی از سریع‌ترین تولیدکنندگان سایت استاتیک، سایت شما را تنها در چند ثانیه با یک باینری می‌سازد.\nواکنش‌گرا با حالت تیره در اندازه‌های مختلف صفحه نمایش عالی به نظر می‌رسد. پشتیبانی از حالت تیره داخلی، با تغییر خودکار براساس اولویت سیستم کاربر.\nساخت و میزبانی رایگان با گیت‌هاب Actions بسازید و به صورت رایگان در گیت‌هاب Pages میزبانی کنید. یا می‌توانید آن را در هر سرویس میزبانی استاتیک میزبانی کنید.\nچند زبانه آسان فقط با افزودن پسوند محلی به پرونده مارک‌داون صفحات وب‌سایت چند زبانه ایجاد کنید. افزودن پشتیبانی i18n به سایت شما بصری است.\nو خیلی بیشتر... برجسته‌کردن سینتکس / فهرست مطالب / سئو / RSS / LaTeX / Mermaid / سفارشی‌سازی / و موارد دیگر…"},"title":"تم هگزترا"},"/about/":{"data":{"":"Hextra 是一款简洁、快速、灵活的主题，适用于构建现代化静态站点。Hextra 特别适用于文档网站，但也可用于构建博客、个人网站等各种类型的网站。\nHugo 和 Jekyll 类似，是一个静态网站生成器。但与其他生成器不同，Hugo 只有单个可执行文件，这使得它可以轻松地在各种平台上安装和运行。Hugo 的运行速度非常快且可靠性高，能够在几毫秒内渲染数千页的网站。\nHextra 被设计为轻量级，具有最小化的内存占用。使用 Hextra 无需安装繁杂的依赖，比如 Node.js；相反，你只需要一个简单的 YAML 配置文件和 Markdown 内容。因此，我们可以专注于内容而非在配置环境上浪费精力。","鸣谢#鸣谢":"Hextra 的设计离不开这些项目的支持和其提供的灵感：\nHugo Tailwind CSS Heroicons Nextra Next.js "},"title":"关于"},"/blog/":{"data":{"":" RSS 订阅 "},"title":"博客"},"/blog/_index.fa/":{"data":{"":" خوراک RSS "},"title":"وبلاگ"},"/docs/":{"data":{"":"👋 你好！欢迎来到 Hextra 文档！","hextra-是什么#Hextra 是什么？":"Hextra 是一款现代、快速且内置丰富功能的 [Hugo][hugo] 主题，它是用 [Tailwind CSS][tailwind-css] 构建的。该主题旨在创建美观的文档、博客和网站，提供了开箱即用的功能和灵活性以满足各种需求。","功能特点#功能特点":" 优美的设计 - 受到 Nextra 的启发，Hextra 利用 Tailwind CSS 提供了一种现代设计，使您的网站看起来出色。 响应式布局和深色模式 - 无论是在移动设备、平板还是桌面上，都表现出色。同时支持深色模式以适应各种光线条件。 快速和轻量级 - 由 Hugo 驱动，一个轻量级且超快的静态网站生成器，封装在一个单一的二进制文件中，Hextra 保持其占用极小。使用它不需要 Javascript 或 Node.js。 全文搜索 - 内置的离线全文搜索由 FlexSearch 提供支持，无需额外配置。 功能全面 - 支持 Markdown、语法高亮、LaTeX 数学公式、图表以及 Shortcodes 元素以增强您的内容。目录、面包屑、分页、侧边栏导航等都会自动生成。 多语言和 SEO 支持 - Hugo 的多语言模式轻松支持多语言网站。对于 SEO 标签、Open Graph 和 Twitter 卡片，也提供了开箱即用的支持。 ","接下来#接下来":"直接进入以下部分开始：\n入门指南学习如何使用 Hextra 创建网站 ","有问题或反馈#有问题或反馈？":" ❓ Hextra 仍在积极开发中。 有问题或反馈？请随时提出问题！ "},"title":"文档"},"/docs/_index.fa/":{"data":{"":"👋 سلام! به مستندات هگزترا خوش آمدید!","بعدی#بعدی":"برای شروع کردن به بخش زیر مراجعه کنید:\nشروع کنیدیادگیری نحوه ایجاد وب‌سایت با استفاده از هگزترا ","سوال-یا-بازخورد#سوال یا بازخورد؟":" ❓ هگزترا هنوز در حال توسعه است. سوال یا بازخوردی دارید؟ با خیال راحت یک موضوع را باز کنید! ","هگزترا-چیه#هگزترا چیه؟":"هگزترا یک تم [Hugo][hugo] مدرن و سریع است که با [Tailwind CSS][tailwind-css] ساخته شده است.\nطراحی شده برای ساخت وب‌سایت‌های زیبا برای مستندات، وبلاگ‌ها و وب‌سایت‌ها، ویژگی‌های خارج از جعبه و انعطاف‌پذیری را برای پاسخگویی نیازهای مختلف فراهم می‌کند.","ویژگیها#ویژگی‌ها":" طراحی زیبا - با الهام از Nextra، هگزترا از Tailwind CSS برای ارائه یک طراحی مدرن که سایت شما را برجسته می‌کند، استفاده می‌کند. طراحی واکنش‌گرا و حالت تیره - در تمام دستگاه‌ها، از تلفن همراه، تبلت تا دسکتاپ، عالی به نظر می‌رسد. حالت تیره نیز برای انطباق با شرایط مختلف روشنایی پشتیبانی می‌شود. سریع و سبک - طراحی شده توسط Hugo، یک ایجادکننده سایت استاتیک سریع مثل رعد و برق که در یک فایل باینری قرار گرفته است، هگزترا ردپای خود را به حداقل می‌رساند. برای استفاده از آن به جاوااسکریپت یا Node.js نیازی ندارید. جستجوی متن کامل - جستجوی متن کاملا آفلاین داخلی طراحی شده توسط FlexSearch، بدون نیاز به پیکربندی اضافی. امکانات کامل - برای بهتر کردن محتوای شما مارک‌داون، برجسته‌کردن سینتکس، فرمول‌های ریاضی LaTeX، نمودارها و عناصر Shortcodeها را شامل میشه. فهرست مطالب، بردکرامب، صفحه‌بندی، پیمایش نوار کناری و موارد دیگر همه به صورت خودکار تولید می‌شوند. چند زبانه و سئو آماده - سایت‌های چند زبانه با حالت چند زبانه Hugo راحت ساخته می‌شوند. پشتیبانی خارج از جعبه برای برچسب‌های سئو، Open Graph و کارت‌های توییتر گنجانده شده است. "},"title":"مستندات"},"/docs/advanced/":{"data":{"":"此部分提供了 Hextra 的一些高级配置。\n多语言 定制化 "},"title":"高级配置"},"/docs/advanced/_index.fa/":{"data":{"":"این بخش برخی از موضوعات پیشرفته تم را پوشش می‌دهد.\nچند زبانه سفارشی‌سازی سیستم نظردهی "},"title":"پیشرفته"},"/docs/advanced/comments.fa/":{"data":{"":"هگزترا از افزودن سیستم نظردهی به سایت شما پشتیبانی می‌کند. در حال حاضر giscus پشتیبانی می‌شود.","giscus#giscus":"giscus یک سیستم نظردهی است که توسط GitHub Discussions طراحی شده است. رایگان و متن باز است.\nبرای فعال کردن giscus، باید موارد زیر را به پرونده پیکربندی سایت اضافه کنید:\nhugo.yamlparams: comments: enable: false type: giscus giscus: repo: \u003crepository\u003e repoId: \u003crepository ID\u003e category: \u003ccategory\u003e categoryId: \u003ccategory ID\u003e تنظیمات giscus را می توانید از وب‌سایت giscus.app ساخت. جزئیات بیشتر را نیز می‌توانید در آنجا ببینید.\nدیدگاه‌ها را می‌توانید برای یک صفحه خاص در بالای همان صفحه فعال یا غیرفعال کرد:\ncontent/docs/about.md--- title: درباره ما comments: true --- "},"title":"نظردهی"},"/docs/advanced/comments/":{"data":{"":"Hextra 支持在你的网站中添加评论系统。 目前已经支持 giscus.","giscus#giscus":"giscus 是由 GitHub Discussions驱动的评论系统。Giscus 免费并且开源。\n如需启用 Giscus, 你需要在配置文件中添加以下内容：\nhugo.yamlparams: comments: enable: false type: giscus giscus: repo: \u003crepository\u003e repoId: \u003crepository ID\u003e category: \u003ccategory\u003e categoryId: \u003ccategory ID\u003e Giscus 配置可以参考 giscus.app，还可以在那里找到更多详细信息。\n可以在 front matter 中启用或禁用特定页面的评论：\ncontent/docs/about.md--- title: About comments: true --- "},"title":"Comments"},"/docs/advanced/customization.fa/":{"data":{"":"هگزترا برخی از گزینه‌های سفارشی‌سازی پیش‌فرض را در پرونده hugo.yaml برای پیکربندی تم ارائه می‌کند. این صفحه گزینه‌های موجود و نحوه سفارشی‌سازی بیشتر تم را توضیح می‌دهد.","css-سفارشی#CSS سفارشی":"برای افزودن CSS سفارشی، باید یک پرونده assets/css/custom.css در سایت خود ایجاد کنیم. هگزترا به طور خودکار این پرونده را بارگیری خواهد کرد.\nخانواده فونت خانواده فونت برای محتوا را می‌توانید با استفاده از این سفارشی کنید:\nassets/css/custom.css.content { font-family: \"Times New Roman\", Times, serif; } عنصر کد درون‌خطی رنگ متن ترکیب شده با متن دیگر را می‌توانید با موارد زیر سفارشی کرد:\nassets/css/custom.css.content code:not(.code-block code) { color: #c97c2e; } رنگ اصلی رنگ اصلی تم را می‌توانید با تنظیم متغیرهای --primary-hue و --primary-saturation سفارشی کرد:\nassets/css/custom.css:root { --primary-hue: 100deg; --primary-saturation: 90%; } برجسته‌کردن سینتکس فهرست تم‌های برجسته‌کردن سینتکس در دسترس گالری Chroma Styles موجود است. شیوه‌نامه را می‌توانید با استفاده از دستور زیر تولید کرد:\nhugo gen chromastyles --style=github برای نادیده گرفتن طرح زمینه برجسته‌کردن سینتکس پیش‌فرض، می‌توانید استایل‌های تولید شده را به پرونده CSS سفارشی اضافه کنیم.","اسکریپتهای-سفارشی#اسکریپت‌های سفارشی":"با افزودن پرونده زیر می‌توانید اسکریپت‌های سفارشی را برای هر صفحه به انتهای اون اضافه کنید:\nlayouts/partials/custom/head-end.html ","سفارشیسازی-بیشتر#سفارشی‌سازی بیشتر":"چیزی را که دنبالش بودید پیدا نکردید؟ با خیال راحت بحثی را باز کنید یا به موضوع کمک کنید!","طرحبندیهای-سفارشی#طرح‌بندی‌های سفارشی":"با ایجاد پرونده‌ای با همین نام در دایرکتوری layouts سایت خود، می‌توانید طرح‌های تم را نادیده بگیرید. به عنوان مثال، برای لغو طرح‌بندی single.html برای مستندات، یک پروندهlayouts/docs/single.html در سایت خود ایجاد کنید.\nبرای اطلاعات بیشتر، به Templateهای هیوگو مراجعه کنید."},"title":"سفارشی‌سازی"},"/docs/advanced/customization/":{"data":{"":"Hextra 在 hugo.yaml 中提供了一些自定义选项来配置主题。 本页介绍了可用选项以及如何进一步自定义主题。","自定义-css#自定义 CSS":"要添加自定义 CSS，我们需要在站点中创建一个文件 assets/css/custom.css。Hextra 将自动加载该文件，比如自定义字体：\nassets/css/custom.css.content { font-family: \"Times New Roman\", Times, serif; } 主题色 主题色可以通过设置 --primary-hue 变量来自定义：\nassets/css/custom.css:root { --primary-hue: 100deg; } 代码高亮 代码高亮风格的详细信息可在 Chroma Styles Gallery 中找到。可以使用以下命令生成样式表：\nhugo gen chromastyles --style=github 可将生成的样式添加到自定义 CSS 文件中以覆盖默认代码高亮样式。","自定义-script#自定义 Script":"你可以添加以下文件以自定义 script 添加到每页的 head 最后：\nlayouts/partials/custom/head-end.html ","自定义布局#自定义布局":"可以在站点的 layouts 目录中创建同名文件来覆盖主题的默认布局。 例如，要覆盖文档的 single.html 布局，在站点中创建文件 layouts/docs/single.html。\n如需或许更多信息，转至 Hugo Templates。","进一步定制-hextra#进一步定制 Hextra":"没有找到你想修改的内容？在 GitHub 上创建 Discussion 或为 Hextra 贡献你的智慧！"},"title":"自定义"},"/docs/advanced/multi-language.fa/":{"data":{"":"هگزترا از ایجاد سایت با چندین زبان با استفاده از حالت چند زبانه Hugo پشتیبانی می‌کند.","بیشتر-بخوانید#بیشتر بخوانید":" حالت چند زبانه هیوگو هیوگو چند زبانه قسمت ۱: ترجمه محتوا هیوگو چند زبانه قسمت ۲: بومی‌سازی رشته‌ها ","ترجمه-آیتمهای-منو#ترجمه آیتم‌های منو":"برای ترجمه آیتم‌های منو در نوار پیمایش، باید فیلد identifier را تنظیم کنیم:\nhugo.yamlmenu: main: - identifier: documentation name: Documentation pageRef: /docs weight: 1 - identifier: blog name: Blog pageRef: /blog weight: 2 و آنها را در پرونده i18n مربوطه ترجمه کنید:\ni18n/fa.yamldocumentation: مستندات blog: وبلاگ ","ترجمه-رشتهها#ترجمه رشته‌ها":"برای ترجمه رشته‌ها در مکان‌های دیگر، باید ترجمه را به پرونده i18n مربوطه اضافه کنیم:\ni18n/fa.yamlreadMore: ادامه مطلب فهرستی از رشته‌های استفاده شده در تم را می‌توان در پرونده i18n/en.yaml پیدا کرد.","فعالسازی-چند-زبانه#فعال‌سازی چند زبانه":"برای اینکه سایت ما چند زبانه شود، باید زبان‌های پشتیبانی شده را به Hugo بگوییم. باید به پرونده پیکربندی سایت اضافه کنیم:\nhugo.yamldefaultContentLanguage: en languages: en: languageName: English weight: 1 fa: languageName: فارسی weight: 2 ja: languageName: 日本語 weight: 3 ","مدیریت-ترجمهها-بر-اساس-نام-پرونده#مدیریت ترجمه‌ها بر اساس نام پرونده":"Hugo از مدیریت ترجمه با نام پرونده پشتیبانی می‌کند. به عنوان مثال، اگر یک پرونده content/docs/_index.md به زبان انگلیسی داشته باشیم، می توانیم یک پرونده content/docs/_index.fa.md برای ترجمه فارسی ایجاد کنیم.\ncontent docs _index.md _index.fa.md _index.ja.md توجه: Hugo همچنین از تترجمه توسط دایرکتوری محتوا پشتیبانی می‌کند."},"title":"چند زبانه"},"/docs/advanced/multi-language/":{"data":{"":"Hextra 支持使用 Hugo 的多语言模式 创建多语言的网站。","启用多语言支持#启用多语言支持":"为了使我们的网站支持多语言，我们需要告诉 Hugo 需要支持的语言。 在站点配置文件中添加：\nhugo.yamldefaultContentLanguage: en languages: en: languageName: English weight: 1 fr: languageName: Français weight: 2 ja: languageName: 日本語 weight: 3 ","按文件名管理翻译#按文件名管理翻译":"Hugo 支持按文件名管理翻译。例如，如果我们有一个英文文件 content/docs/_index.md，我们可以创建一个翻译为法语的文件 content/docs/_index.fr.md。\ncontent docs _index.md _index.fr.md _index.ja.md 注意：Hugo 还支持按内容目录管理翻译。","更多参考#更多参考":" Hugo Multilingual Mode Hugo Multilingual Part 1: Content translation Hugo Multilingual Part 2: Strings localization ","翻译字符串#翻译字符串":"要翻译其他地方的字符串，我们需要将翻译添加到相应的 i18n 文件中：\ni18n/fr.yamlreadMore: Lire la suite ","翻译菜单项#翻译菜单项":"要翻译导航栏中的菜单项，我们需要设置 identifier 字段：\nhugo.yamlmenu: main: - identifier: documentation name: Documentation pageRef: /docs weight: 1 - identifier: blog name: Blog pageRef: /blog weight: 2 "},"title":"多语言"},"/docs/getting-started.fa/":{"data":{"":"","بعدی#بعدی":"برای شروع اضافه کردن مطالب بیشتر، بخش‌های زیر را کاوش کنید:\nسازماندهی پرونده‌ها پیکربندی مارک‌داون ","شروع-به-عنوان-پروژه-جدید#شروع به عنوان پروژه جدید":"دو راه اصلی برای اضافه کردن تم هگزترا به پروژه Hugo وجود دارد:\nماژول‌های Hugo (توصیه می‌شود): ساده‌ترین و توصیه شده‌ترین. ماژول‌های Hugo به شما امکان می‌دهند تم را مستقیما از منبع آنلاین آن وارد کنید. تم به صورت خودکار دانلود و توسط Hugo مدیریت می‌شود. ساب‌ماژول گیت: در عوض، هگزترا را به عنوان یک ساب‌ماژول گیت اضافه کنید. تم توسط گیت دانلود شده و در پوشه themes پروژه شما ذخیره می‌شود. هگزترا را به عنوان ماژول Hugo راه‌اندازی کنید پیش‌نیازها قبل از شروع، باید این نرم‌افزارها را نصب کنید:\nHugo (extended version) Git Go مراحل راه‌انداختن یک سایت جدید Hugo hugo new site my-site --format=yaml پیکربندی تم هگزترا از طریق ‌ماژول # مقداردهی اولیه ماژول هیوگو cd my-site hugo mod init github.com/username/my-site # افزودن تم هگزترا hugo mod get github.com/imfing/hextra با افزودن موارد زیر، hugo.yaml را برای استفاده از تم هگزترا پیکربندی کنید:\nmodule: imports: - path: github.com/imfing/hextra اولین صفحه‌های محتوای خود را ایجاد کنید ایجاد صفحه محتوای جدید برای صفحه اصلی و صفحه مستندات:\nhugo new content/_index.md hugo new content/docs/_index.md پیش‌نمایش سایت به صورت محلی hugo server --buildDrafts --disableFastRender پیش‌نمایش سایت جدید شما در http://localhost:1313/ در دسترس است.\nچگونه تم را به‌روز کنیم؟ برای به‌روزرسانی همه ماژول‌های Hugo در پروژه خود به آخرین نسخه‌هایشان، دستور زیر را اجرا کنید:\nhugo mod get -u برای به‌روزرسانی هگزترا به آخرین نسخه منتشر شده، دستور زیر را اجرا کنید:\nhugo mod get -u github.com/imfing/hextra برای جزئیات بیشتر به ماژول‌های هیوگو مراجعه کنید.\nهگزترا را به عنوان ساب‌ماژول Git راه‌اندازی کنید پیش‌نیازها قبل از شروع، باید این نرم‌افزارها را نصب کنید:\nHugo (extended version) Git مراحل راه‌انداختن یک سایت جدید Hugo hugo new site my-site --format=yaml افزودن تم هگزترا به عنوان یک ساب‌ماژول Git git submodule add https://github.com/imfing/hextra.git themes/hextra با افزودن موارد زیر، hugo.yaml را برای استفاده از تم هگزترا پیکربندی کنید:\ntheme: hextra اولین صفحه‌های محتوای خود را ایجاد کنید ایجاد صفحه محتوای جدید برای صفحه اصلی و صفحه مستندات:\nhugo new content/_index.md hugo new content/docs/_index.md پیش‌نمایش سایت به صورت محلی hugo server --buildDrafts --disableFastRender پیش‌نمایش سایت جدید شما در http://localhost:1313/ در دسترس است.\nهنگام استفاده از CI/CD برای به‌کاراندازی وب‌سایت Hugo، از اجرای دستور زیر قبل از اجرای دستور hugo مطمئن شوید و ضروری است.\ngit submodule update --init اجرا نشدن این دستور باعث می‌شود که پوشه تم با پرونده‌های تم هگزترا پر نشود و منجر به خرابی ساخت شود.\nچگونه تم را به‌روز کنیم؟ برای به‌روزرسانی تمام ساب‌ماژول‌های در مخزن خود به آخرین commitها که موجود هست، دستور زیر را اجرا کنید:\ngit submodule update --remote برای به‌روزرسانی هگزترا به آخرین commit، دستور زیر را اجرا کنید:\ngit submodule update --remote themes/hextra برای جزئیات بیشتر به ساب‌ماژول‌های Git مراجعه کنید.","شروع-سریع-از-طریق-template#شروع سریع از طریق Template":" imfing/hextra-starter-template\nبا استفاده از template در بالای صفحه‌ای مخزن می‌توانید به سرعت شروع به کار کنید.\nما یک گردش کاری GitHub Actions ارائه کرده‌ایم که می‌تواند به ساخت و به‌کاراندازی خودکار سایت شما در گیت‌هاب Pages، برای میزبانی رایگان کمک کند. برای گزینه‌های بیشتر، به‌کاراندازی سایت را بررسی کنید.\n🌐 نسخه‌ي نمایشی ↖"},"title":"شروع کنید"},"/docs/getting-started/":{"data":{"":"","作为新项目开始#作为新项目开始":"前提条件 在开始之前，请确保我们已经安装了 Hugo。 请参考 Hugo 的官方安装指南以获取更多详情。\nHugo 模块是管理 Hugo 主题的推荐方式。要使用 Hugo 模块，我们需要安装 Git 和 Go。\n初始化 Hugo 站点 hugo new site my-site --format=yaml 通过 Hugo Module 安装 # 初始化 Hugo 模块 cd my-site hugo mod init github.com/username/my-site # 添加 Hextra hugo mod get github.com/imfing/hextra 编辑 hugo.yaml 以启用 Hextra：\nmodule: imports: - path: github.com/imfing/hextra 通过 Git Submodule 安装 先决条件 在我们开始之前，你必须先确保以下软件已经安装：\nHugo (extended version) Git 步骤 初始化 Hugo 站点 hugo new site my-site --format=yaml 将 Hextra 添加为 Git Submodule git submodule add https://github.com/imfing/hextra.git themes/hextra 添加以下内容来配置 hugo.yaml 以使用 Hextra：\ntheme: hextra 创建你的第一个内容页 让我们为主页和文档页面创建一个新的内容页面：\nhugo new content/_index.md hugo new content/docs/_index.md 在本地预览站点 hugo server --buildDrafts --disableFastRender 瞧！你现在可以在 http://localhost:1313/ 看到你的新站点。\n使用 CI/CD 进行部署时，必须确保在运行 hugo 命令之前执行以下命令。\ngit submodule update --init 如果不运行此命令，theme 中将不会存在 Hextra 文件，进而导致构建失败。\n如何更新主题？ 如需把项目中所有的 Hugo Modules 都升级到最新，在终端中运行此命令：\nhugo mod get -u 如需把 Hextra 升级到最新的发行版本, 在终端中运行此命令：\nhugo mod get -u github.com/imfing/hextra 如果你需要获得更多信息，参见 Hugo Modules.","使用模板快速开始#使用模板快速开始":" imfing/hextra-starter-template\n通过使用上面的模板仓库，您将能够快速地开始。\n我们提供了一个 GitHub Actions 工作流，它可以帮助您自动构建并部署您的网站到 GitHub Pages，并免费托管。\n🌐 演示 ↗","接下来#接下来":"探索这些文档以便添加更多内容：\nOrganize Files Configuration Markdown "},"title":"快速开始"},"/docs/guide/":{"data":{"":"探索以下各节以学习如何使用 Hextra 编写内容：\n目录结构 配置 Markdown 代码高亮 LaTeX 公式 图表 短代码 "},"title":"指南"},"/docs/guide/_index.fa/":{"data":{"":"برای یادگیری نحوه استفاده از هگزترا، بخش‌های زیر را کاوش کنید:\nسازماندهی پرونده‌ها پیکربندی مارک‌داون برجسته‌کردن سینتکس LaTeX نمودارها کدهای کوتاه به‌کاراندازی سایت "},"title":"راهنما"},"/docs/guide/configuration.fa/":{"data":{"":"Hugo پیکربندی خود را از hugo.yaml در ریشه سایت Hugo شما می‌خواند. پرونده پیکربندی جایی است که می‌توانید تمام جنبه‌های سایت خود را پیکربندی کنید. پرونده پیکربندی این سایت exampleSite/hugo.yaml را در گیت‌هاب بررسی کنید تا ایده‌ای جامع از تنظیمات موجود و بهترین شیوه‌ها بدست آورید.","سایر-موارد#سایر موارد":"Favicon برای سفارشی کردن favicon برای سایت خود، پرونده‌های آیکون را درون پوشه static قرار دهید تا faviconهای پیش‌فرض در تم جایگزین شود:\nstatic android-chrome-192x192.png android-chrome-512x512.png apple-touch-icon.png favicon-16x16.png favicon-32x32.png favicon-dark.svg favicon.ico favicon.svg site.webmanifest هر دو پرونده favicon.ico و favicon.svg را در پروژه خود قرار دهید، تا از نمایش صحیح faviconهای سایت خود مطمئن شوید.\nدر حالی که favicon.ico به طور کلی برای مرورگرهای قدیمی‌تر است، favicon.svg توسط مرورگرهای مدرن پشتیبانی می‌شود. faviconfavicon-dark.svg اختیاری را می‌توانید برای یک تجربه سفارشی در حالت تیره اضافه کرد. با خیال راحت از ابزارهایی مانند favicon.io یا favycon برای تولید این آیکون‌ها استفاده کنید.\nپیکربندی تم از تنظیمات theme برای پیکربندی حالت پیش‌فرض تم و دکمه جابه‌جایی استفاده کنید و به بازدیدکنندگان اجازه دهید بین حالت روشن یا تیره جابجا شوند.\nhugo.yamlparams: theme: # light | dark | system default: system displayToggle: true گزینه‌های theme.default:\nlight - همیشه از حالت روشن استفاده شود dark - همیشه از حالت تیره استفاده شود system - همگام‌سازی با تنظیمات سیستم‌عامل (پیش‌فرض) پارامتر theme.displayToggle به شما این امکان را می‌دهد که یک دکمه جابجایی برای تغییر حالت تم‌ها نمایش دهید. وقتی روی true تنظیم شود، بازدیدکنندگان می‌توانند بین حالت روشن یا تیره جابه‌جا شوند و تنظیمات پیش‌فرض را نادیده بگیرند.\nعرض صفحه عرض صفحه را می‌توان با پارامتر params.page.width در پرونده پیکربندی سفارشی کرد:\nhugo.yamlparams: page: # full (100%), wide (90rem), normal (1280px) width: wide سه گزینه در دسترس وجود دارد: full، wide و normal. به طور پیش‌فرض، عرض صفحه روی normal تنظیم شده است.\nبه طور مشابه، عرض نوار ناوبری و پاورقی را می‌توان با پارامترهای params.navbar.width و params.footer.width سفارشی کرد.\nفهرست جستجو جستجوی متن کامل توسط FlexSearch پیاده‌سازی شده و به طور پیش‌فرض فعال است. برای سفارشی کردن فهرست جستجو، پارامتر params.search.flexsearch.index را در پرونده پیکربندی تنظیم کنید:\nhugo.yamlparams: # Search search: enable: true type: flexsearch flexsearch: # index page by: content | summary | heading | title index: content گزینه‌های flexsearch.index:\ncontent - محتوای کامل صفحه (پیش‌فرض) summary - خلاصه صفحه، برای جزئیات بیشتر به خلاصه مطالب Hugo مراجعه کنید heading - سرتیترهای سطح ۱ و سطح ۲ title - فقط شامل عنوان صفحه است برای حذف یک صفحه از فهرست جستجو، excludeSearch: true را در قسمت بالای صفحه تنظیم کنید:\ncontent/docs/guide/configuration.md--- title: پیکربندی excludeSearch: true --- گوگل آنالیتیکس برای فعال کردن گوگل آنالیتیکس، پرچم services.googleAnalytics.ID را در hugo.yaml تنظیم کنید:\nhugo.yamlservices: googleAnalytics: ID: G-MEASUREMENT_ID ","ناوبری#ناوبری":"منو منوی سمت چپ بالا در قسمت menu.main در پرونده پیکربندی تعریف شده است:\nhugo.yamlmenu: main: - name: مستندات pageRef: /docs weight: 1 - name: وبلاگ pageRef: /blog weight: 2 - name: درباره ما pageRef: /about weight: 3 - name: جستجو weight: 4 params: type: search - name: گیت‌هاب weight: 5 url: \"https://github.com/imfing/hextra\" params: icon: github انواع مختلفی از آیتم‌های منو وجود دارد:\nپیوند به صفحه‌ای در سایت با pageRef - name: مستندات pageRef: /docs پیوند به یک نشانی اینترنتی با url - name: گیت‌هاب url: \"https://github.com\" نوار جستجو با type: search - name: جستجو params: type: search آیکون - name: گیت‌هاب params: icon: github این آیتم‌های منو را می‌توانید با تنظیم پارامتر weight مرتب کنید.\nآرم و عنوان برای تغییر آرم پیش‌فرض، hugo.yaml را ویرایش کنید و مسیر را به پرونده آرم خود در دایرکتوری static اضافه کنید. به صورت اختیاری، می‌توانید پیوندی را که کاربران هنگام کلیک کردن روی آرم شما به آن هدایت می‌شوند، تغییر دهید، همچنین عرض و ارتفاع آرم را به پیکسل تنظیم کنید.\nhugo.yamlparams: navbar: displayTitle: true displayLogo: true logo: path: images/logo.svg dark: images/logo-dark.svg link: / width: 40 height: 20 ","نوار-کناری#نوار کناری":"نوار کناری اصلی برای نوار کناری اصلی، به طور خودکار از ساختار دایرکتوری محتوا تولید می‌شود. برای جزئیات بیشتر به صفحه سازماندهی پرونده‌ها مراجعه کنید.\nبرای حذف یک صفحه از نوار کناری سمت راست، پارامترsidebar.exclude را در قسمت بالایی صفحه تنظیم کنید:\ncontent/docs/guide/configuration.md--- title: پیکربندی sidebar: exclude: true --- پیوندهای اضافی پیوندهای اضافی نوار کناری در زیر بخش menu.sidebar در پرونده پیکربندی تعریف شده است:\nhugo.yamlmenu: sidebar: - name: بیشتر params: type: separator weight: 1 - name: \"درباره ما\" pageRef: \"/about\" weight: 2 - name: \"مستندات هیوگو ↖\" url: \"https://gohugo.io/documentation/\" weight: 3 ","نوار-کناری-سمت-چپ#نوار کناری سمت چپ":"فهرست مطالب فهرست مطالب به طور خودکار از سرتیرهای موجود در پرونده محتوا تولید می‌شود. می‌توان آن را با تنظیم toc: false در قسمت بالایی صفحه غیرفعال کرد.\ncontent/docs/guide/configuration.md--- title: پیکربندی toc: false --- پیوند ویرایش صفحه برای پیکربندی پیوند ویرایش صفحه، می‌توانیم پارامتر params.editURL.base را در پرونده پیکربندی تنظیم کنیم:\nhugo.yamlparams: editURL: enable: true base: \"https://github.com/your-username/your-repo/edit/main\" پیوندهای ویرایش به طور خودکار برای هر صفحه براساس نشانی اینترنتی ارائه شده به عنوان دایرکتوری ریشه ایجاد می‌شود. اگر می‌خواهید پیوند ویرایش را برای یک صفحه خاص تنظیم کنید، می‌توانید پارامتر editURL را در قسمت بالای صفحه تنظیم کنید:\ncontent/docs/guide/configuration.md--- title: پیکربندی editURL: \"https://example.com/edit/this/page\" --- ","پاورقی#پاورقی":"کپی‌رایت برای تغییر متن کپی‌رایت نمایش داده شده در پاورقی وب‌سایت خود، باید پرونده‌ای به نام i18n/fa.yaml ایجاد کنید. در این پرونده متن کپی‌رایت جدید خود را مطابق شکل زیر مشخص کنید:\ni18n/fa.yamlcopyright: \"© ۲۰۲۴ متن شما در اینجا\" برای مرجع شما، یک مثال i18n/en.yaml را می‌توانید در مخزن گیت‌هاب پیدا کنید. علاوه بر این، می‌توانید از فرمت مارک‌داون در متن کپی‌رایت استفاده کنید."},"title":"پیکربندی"},"/docs/guide/configuration/":{"data":{"":"Hugo 从 Hugo 网站根目录下的 hugo.yaml 读取配置。 在配置文件中，您可以配置站点的所有选项。 你可以在 exampleSite/hugo.yaml 中找到此站点的配置文件作为开始。","footer#Footer":"版权声明 如需修改网站页脚中显示的版权文本，您需要创建一个名为“i18n/en.yaml”的文件。 在此文件中，填写新的版权文本，像这样：\ni18n/en.yamlcopyright: \"© 2024 YOUR TEXT HERE\" 你可以在 GitHub 存储库中找到示例 i18n/en.yaml 文件。另外，你可以在版权文本中使用 Markdown 格式。","侧边栏#侧边栏":"主侧边栏 主侧边栏是自动从 content 目录结构生成的。 有关更多详细信息，转至 目录结构。\n额外链接 侧边栏的额外链接在配置文件的 menu.sidebar 部分中配置：\nhugo.yamlmenu: sidebar: - name: More params: type: separator weight: 1 - name: \"About\" pageRef: \"/about\" weight: 2 - name: \"Hugo Docs ↗\" url: \"https://gohugo.io/documentation/\" weight: 3 ","其他#其他":"Favicon 如需自定义 favicon，请将图标文件放在 static 文件夹下以覆盖 主题中的默认 favicon：\nstatic android-chrome-192x192.png android-chrome-512x512.png apple-touch-icon.png favicon-16x16.png favicon-32x32.png favicon-dark.svg favicon.ico favicon.svg site.webmanifest 在您的项目中包含 favicon.ico 和 favicon.svg 文件，以确保网站的网站图标正确显示。\n虽然 favicon.ico 通常适用于较旧的浏览器，但 favicon.svg 受到现代浏览器的支持，所以更现代的做法是添加 favicon-dark.svg 以便在黑暗模式下提供较好的体验体验。\n请随意使用 favicon.io 或 favycon 等工具来生成这些图标。\n颜色主题配置 使用theme设置来配置默认主题模式和切换按钮，允许访问者在浅色或深色模式之间切换。\nhugo.yamlparams: theme: # light | dark | system default: system displayToggle: true theme.default 的可选项：\nlight - 仅使用浅色模式 dark - 仅使用神色模式 system - 跟随系统 theme.displayToggle 控制显示用于更改主题的切换按钮。 当设置为“true”时，访问者可以在浅色或深色模式之间切换，覆盖默认设置。\n页宽 页面的宽度可以通过配置文件中的params.page.width参数来调整：\nhugo.yamlparams: page: # full (100%), wide (90rem), normal (1280px) width: wide 有三个可选项：full, wide, and normal. 默认的页宽模式是 normal.\n同样的，导航栏和 footer 的宽度也可通过 params.navbar.width 和 params.footer.width 调整。\n搜索 默认情况下启用由 FlexSearch 提供全文搜索。 要自定义搜索索引，请在配置文件中设置 params.search.flexsearch.index ：\nhugo.yamlparams: # Search search: enable: true type: flexsearch flexsearch: # index page by: content | summary | heading | title index: content flexsearch.index 的可选项：\ncontent - 全内容搜索 summary - 概述 Hugo Content Summaries heading - 一级和二级标题 title - 仅搜索标题 要从搜索索引中排除页面，更改 front matter 中的 excludeSearch: true:\ncontent/docs/guide/configuration.md--- title: Configuration excludeSearch: true --- Google Analytics 要启用 Google Analytics，设置 services.googleAnalytics.ID:\nhugo.yamlservices: googleAnalytics: ID: G-MEASUREMENT_ID ","右侧边栏#右侧边栏":"目录 目录是根据内容文件中的标题自动生成的，可以在 front matter 设置 toc：false 来禁用它。\ncontent/docs/guide/configuration.md--- title: Configuration toc: false --- 编辑此页链接 要配置编辑此页链接，我们可以在配置文件中设置 params.editURL.base：\nhugo.yamlparams: editURL: base: \"https://github.com/your-username/your-repo/edit/main\" 将为每个页面自动生成编辑链接。 如需为特定页面设置编辑链接，可以在页面的 front matter 中设置 editURL：\ncontent/docs/guide/configuration.md--- title: Configuration editURL: \"https://example.com/edit/this/page\" --- ","导航栏#导航栏":"菜单 右上角的菜单在配置文件的 menu.main 中配置：\nhugo.yamlmenu: main: - name: Documentation pageRef: /docs weight: 1 - name: Blog pageRef: /blog weight: 2 - name: About pageRef: /about weight: 3 - name: Search weight: 4 params: type: search - name: GitHub weight: 5 url: \"https://github.com/imfing/hextra\" params: icon: github 有几种不同类型的菜单项：\nLink to a page in the site with pageRef - name: Documentation pageRef: /docs Link to an external URL with url - name: GitHub url: \"https://github.com\" Search bar with type: search - name: Search params: type: search Icon - name: GitHub params: icon: github 这些菜单项可以通过设置 weight 进行排序。"},"title":"配置文件"},"/docs/guide/deploy-site.fa/":{"data":{"":"Hugo وب‌سایت‌های استاتیک را ایجاد می‌کند و امکان گزینه‌های میزبانی انعطاف‌پذیر را فراهم می‌کند. این صفحه راهنماهایی برای به‌کاراندازی سایت هگزترا شما در پلتفرم‌های مختلف ارائه می‌کند.","netlify#Netlify":" کد خود را به مخزن Git خود (گیت‌هاب، گیت‌لب و غیره) ارسال کنید. وارد کردن پروژه به Netlify اگر از [hextra-starter-template][hextra-starter-template] استفاده نمی‌کنید، موارد زیر را به صورت دستی پیکربندی کنید: دستور Build را روی hugo --gc --minify پیکربندی کنید دایرکتوری Publish را برای public مشخص کنید HUGO_VERSION متغیر محیط استقرار را اضافه کنید و روی 0.119.0 تنظیم کنید استقرار! برای جزئیات بیشتر Hugo را در Netlify بررسی کنید.","vercel#Vercel":" کد خود را به مخزن Git خود (گیت‌هاب، گیت‌لب و غیره) ارسال کنید. به پیشخوان Vercel بروید و پروژه Hugo خود را وارد کنید پروژه را پیکربندی کنید، Hugo را به‌ عنوان چارچوب Preset انتخاب کنید دستور Build و Install را لغو کنید: دستور Build را روی hugo --gc --minify تنظیم کنید دستور Install را روی yum install golang تنظیم کنید ","کلودفلر-pages#کلودفلر Pages":" کد منبع سایت خود را در یک مخزن Git (به عنوان مثال گیت‌هاب) قرار دهید وارد پیشخوان کلودفلر شوید و حساب خود را انتخاب کنید در صفحه اصلی حساب‌کاربری، Workers \u0026 Pages \u003e Create application \u003e Pages \u003e Connect to Git را انتخاب کنید مخزن را انتخاب کنید و در بخش Set up builds and Deployments اطلاعات زیر را وارد کنید: Configuration Value Production branch main Build command hugo --gc --minify Build directory public برای جزئیات بیشتر، بررسی کنید:\nیک سایت هیوگو راه‌اندازی کنید.. پشتیبانی زبان و ابزار.. ","گیتهاب-pages#گیت‌هاب Pages":"گیت‌هاب Pages روشی توصیه شده برای به‌کاراندازی و میزبانی وب‌سایت شما به صورت رایگان است.\nاگر سایت را با استفاده از hextra-starter-template راه‌اندازی سریع پیاده‌سازی می‌کنید، گردش کار گیت‌هاب Actions را به صورت خارج از جعبه ارائه کرده‌ایم که به‌کاراندازی خودکار در گیت‌هاب Pages به شما کمک می‌کند.\nپیکربندی گیت‌هاب Actions در زیر یک پیکربندی مثال از hextra-starter-template آورده شده است:\n.github/workflows/pages.yaml# Sample workflow for building and deploying a Hugo site to GitHub Pages name: Deploy Hugo site to Pages on: # Runs on pushes targeting the default branch push: branches: [\"main\"] # Allows you to run this workflow manually from the Actions tab workflow_dispatch: # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages permissions: contents: read pages: write id-token: write # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued. # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete. concurrency: group: \"pages\" cancel-in-progress: false # Default to bash defaults: run: shell: bash jobs: # Build job build: runs-on: ubuntu-latest env: HUGO_VERSION: 0.117.0 steps: - name: Checkout uses: actions/checkout@v4 with: fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Go uses: actions/setup-go@v4 with: go-version: '1.21' - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: '0.117.0' extended: true - name: Build with Hugo env: # For maximum backward compatibility with Hugo modules HUGO_ENVIRONMENT: production HUGO_ENV: production run: | hugo \\ --gc --minify \\ --baseURL \"https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/\" - name: Upload artifact uses: actions/upload-pages-artifact@v2 with: path: ./public # Deployment job deploy: environment: name: github-pages url: ${{ steps.deployment.outputs.page_url }} runs-on: ubuntu-latest needs: build steps: - name: Deploy to GitHub Pages id: deployment uses: actions/deploy-pages@v2 در تنظیمات مخزن خود، Pages \u003e Build and deployment \u003e Source را روی GitHub Actions تنظیم کنید: به‌طور پیش‌فرض، گردش کار گیت‌هاب Actions بالا .github/workflows/pages.yaml فرض می‌کند که سایت در حال به‌کاراندازی در https://\u003cUSERNAME\u003e.github.io/\u003cREPO\u003e/ است.\nاگر در حال استفاده از https://\u003cUSERNAME\u003e.github.io/ هستید، سپس --baseURL را تغییر دهید:\n.github/workflows/pages.yaml 54 55 56 57 run: | hugo \\ --gc --minify \\ --baseURL \"https://${{ github.repository_owner }}.github.io/\" اگر می‌خواهید روی دامنه شخصی خود استقرار پیدا کند، لطفا مقدار --baseURL را بر این اساس تغییر دهید."},"title":"به‌کاراندازی سایت"},"/docs/guide/deploy-site/":{"data":{"":"Hugo 生成静态站点，允许多种托管方式，你可以自由选择 本页将给出部署你的 Hextra 站点的方法","cloudflare-pages#Cloudflare Pages":" 将您的网站托管在 Git 存储库（例如 GitHub） 登录到 Cloudflare dashboard 并选择你的账户 转至在账户主页面中 Workers \u0026 Pages \u003e Create application \u003e Pages \u003e Connect to Git 选择你的仓库 Set up builds and deployments 提供以下信息： Configuration Value Production branch main Build command hugo --gc --minify Build directory public 如需了解更多内容，见：\nDeploy a Hugo site. Language support and tools. ","github-pages#GitHub Pages":"GitHub Pages 是免费部署和托管网站的推荐方法\n如果您使用以下方式引导该网站 hextra-starter-template, 它提供了开箱即用的 GitHub Actions 工作流程，有助于自动部署到 GitHub Pages\nGitHub Actions Configuration 以下是配置来自 hextra-starter-template 的 Workflow 的示例：\n.github/workflows/pages.yaml# 用于构建 Hugo 站点并将其部署到 GitHub Pages 的示例工作流程 name: Deploy Hugo site to Pages on: # 由默认分支触发 push: branches: [\"main\"] # 允许手动运行 workflow_dispatch: # 设置 GITHUB_TOKEN 的权限以允许部署到 GitHub Pages permissions: contents: read pages: write id-token: write # 仅允许一项并发部署，跳过正在进行的运行和最新排队的运行之间排队的运行 # 但是，不要取消正在进行的运行，因为我们希望完成这些生产部署 concurrency: group: \"pages\" cancel-in-progress: false # 默认为 bash defaults: run: shell: bash jobs: # 开始构建 build: runs-on: ubuntu-latest env: HUGO_VERSION: 0.121.2 steps: - name: Checkout uses: actions/checkout@v4 with: fetch-depth: 0 # 获取 .GitInfo 和 .Lastmod 的所有历史记录 submodules: recursive - name: Setup Go uses: actions/setup-go@v5 with: go-version: '1.21' - name: Setup Pages id: pages uses: actions/configure-pages@v4 - name: Setup Hugo run: | wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \\ \u0026\u0026 sudo dpkg -i ${{ runner.temp }}/hugo.deb - name: Build with Hugo env: # 最大程度地向后兼容 Hugo 模块 HUGO_ENVIRONMENT: production HUGO_ENV: production run: | hugo \\ --gc --minify \\ --baseURL \"${{ steps.pages.outputs.base_url }}/\" - name: Upload artifact uses: actions/upload-pages-artifact@v3 with: path: ./public # 开始部署 deploy: environment: name: github-pages url: ${{ steps.deployment.outputs.page_url }} runs-on: ubuntu-latest needs: build steps: - name: Deploy to GitHub Pages id: deployment uses: actions/deploy-pages@v4 在仓库设置中将 Pages \u003e Build and deployment \u003e Source 调整为 GitHub Actions: 默认情况下，上述 GitHub Actions 工作流程 .github/workflows/pages.yaml 假定站点部署到 https://\u003cUSERNAME\u003e.github.io/\u003cREPO\u003e/\n如需部署到 https://\u003cUSERNAME\u003e.github.io/ 修改参数 --baseURL:\n.github/workflows/pages.yaml 54 55 56 57 run: | hugo \\ --gc --minify \\ --baseURL \"https://${{ github.repository_owner }}.github.io/\" 如需部署到自己的域，请对应修改 --baseURL","netlify#Netlify":" 将代码推送到 Git 存储库 (如 GitHub, GitLab) 导入项目 如果您不使用[hextra-starter-template][hextra-starter-template], 手动配置以下内容： C 将构建命令配置为 hugo --gc --minify 指定发布目录为 public 添加环境变量 HUGO_VERSION 并设定为 0.119.0 部署 转至 Hugo on Netlify 获得更多信息","vercel#Vercel":" 将代码推送到 Git 存储库（GitHub、GitLab 等） 转至 Vercel Dashboard 并导入你的 Hugo 项目 配置项目，选择 Hugo 作为 Framework Preset 覆盖构建命令和安装命令： 设置构建命令为 hugo --gc --minify 将安装命令设置为 yum install golang "},"title":"部署站点"},"/docs/guide/diagrams.fa/":{"data":{"":"در حال حاضر، هگزترا از Mermaid برای نمودارها پشتیبانی می‌کند.","mermaid#Mermaid":"Mermaid یک ابزار نمودار و نمودار مبتنی بر جاوااسکریپت است که تعاریف متنی الهام گرفته از مارک‌داون را دریافت می‌کند و نمودارها را به صورت پویا در مرورگر ایجاد می‌کند. به عنوان مثال، Mermaid می‌تواند نمودارهای فلوچارت، نمودارهای توالی، نمودارهای دایره‌ای و موارد دیگر را رندر کند.\nاستفاده از Mermaid در هگزترا به سادگی نوشتن یک بلوک کد با مجموعه زبان mermaid است:\n```mermaid graph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD; ``` به صورت زیر رندر خواهد شد:\ngraph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD;نمودار توالی:\nsequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts prevail! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good!برای اطلاعات بیشتر، لطفا به مستندات Mermaid مراجعه کنید."},"title":"نمودارها"},"/docs/guide/diagrams/":{"data":{"":"目前，Hextra 支持 Mermaid 的图表。","mermaid#Mermaid":"Mermaid 是一个基于 JavaScript 的图表绘制工具，它的文本定义和 Markdown 类似，可在浏览器中动态创建图表。例如：流程图、序列图、饼图等。\n在 Hextra 中使用 Mermaid 就像使用代码块一样简单：\n```mermaid graph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD; ``` 将呈现为：\ngraph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD;Sequence diagram：\nsequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts prevail! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good!如需获取更多信息，转至 Mermaid Documentation。"},"title":"图表"},"/docs/guide/latex.fa/":{"data":{"":"$\\KaTeX$ برای رندر کردن عبارت‌های ریاضی LaTeX استفاده می‌شود. می‌توان آن را در هر صفحه با تنظیم math روی true در قسمت بالای صفحه فعال کرد.\nMarkdown--- title: \"صفحه من با LaTeX\" math: true --- وقتی فعال باشد، اسکریپت‌ها، شیوه‌نامه‌ها و فونت‌های KaTeX به طور خودکار در سایت شما قرار می‌گیرند. می‌توانید از عبارت‌های ریاضی LaTeX در محتوای مارک‌داون خود استفاده کنید.","توابع-پشتیبانی-شده#توابع پشتیبانی شده":"برای مشاهده فهرست توابع پشتیبانی شده، به توابع پشتیبانی شده KaTeX مراجعه کنید.","شیمی#شیمی":"عبارت‌های شیمی از طریق افزونه mhchem پشتیبانی می‌شوند.\nدرون‌خطی: $\\ce{H2O}$ آب است.\nپاراگراف جداگانه:\npage.md$$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$ $$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$","مثال#مثال":"هر دو عبارت‌های ریاضی درون‌خطی و پاراگراف جداگانه LaTeX در محتوای مارک‌داون پشتیبانی می‌شوند.\nدرون‌خطی page.mdاین $\\sigma(z) = \\frac{1}{1 + e^{-z}}$ درون‌خطی است. این $\\sigma(z) = \\frac{1}{1 + e^{-z}}$ درون‌خطی است.\nپاراگراف جداگانه page.md$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t) e^{-j\\omega t} \\, dt$$ به صورت زیر رندر خواهد شد:\n$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t) e^{-j\\omega t} , dt$$"},"title":"LaTeX"},"/docs/guide/latex/":{"data":{"":"$\\KaTeX$ 用于呈现 LaTeX 数学表达式。可在 frontmatter 将 math 设置为 true 来启用。\nMarkdown--- title: \"My Page with LaTeX\" math: true --- 启用后，KaTeX 中的脚本，样式表和字体将自动包含在你的网站中。这样就可以在 Markdown 内容中使用 LaTeX 数学表达式。","化学表达式#化学表达式":"通过 mhchem 支持化学表达式。\n行内：$\\ce{H2O}$ 是水。\n独立段落：\npage.md$$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$ $$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$","支持的功能#支持的功能":"有关支持的符号列表，转至 KaTeX 支持的公式。","示例#示例":"Markdown 内容支持行内和独立段落的 LaTeX 数学表达式。\n行内 page.mdThis $\\sigma(z) = \\frac{1}{1 + e^{-z}}$ is inline. This $\\sigma(z) = \\frac{1}{1 + e^{-z}}$ is inline.\n独立段落 page.md$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t) e^{-j\\omega t} \\, dt$$ 将被渲染为：\n$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t) e^{-j\\omega t} , dt$$"},"title":"LaTeX 公式"},"/docs/guide/markdown.fa/":{"data":{"":"Hugo از سینتکس مارک‌داون برای قالب‌بندی متن، ایجاد فهرست و موارد دیگر پشتیبانی می‌کند. این صفحه برخی از رایج‌ترین نمونه‌های سینتکس مارک‌داون را به شما نشان می‌دهد.","مثالهای-مارکداون#مثال‌های مارک‌داون":"ظاهر طراحی دادن به متن سبک سینتکس مثال خروجی توپر **متن توپر** **متن توپر** متن توپر کج *متن کج* *متن کج* متن کج خط خورده ~~متن خط خورده~~ ~~متن خط خورده~~ متن خط خورده پایین‌نویس \u003csub\u003e\u003c/sub\u003e این یک متن \u003csub\u003eپایین‌نویس\u003c/sub\u003e است این یک متن پایین‌نویس است بالانویس \u003csup\u003e\u003c/sup\u003e این یک متن \u003csup\u003eبالانویس\u003c/sup\u003e است این یک متن بالانویس است بلوک نقل‌قول بلوک نقل‌قول با ذکر منبع\nبا اشتراک‌گذاری حافظه ارتباط برقرار نکنید، حافظه را با برقراری ارتباط به اشتراک بگذارید.\n— راب پایک1\nجدول‌ها جدول‌ها بخشی از مشخصات اصلی مارک‌داون نیستند، اما Hugo از آنها در خارج از جعبه پشتیبانی می‌کند.\nنام سن گودرز ۳۰ آصف ۳۴ مارک‌داون درون‌خطی درون جدول‌ها کج توپر کد کج توپر کد بلوک‌های کد برجسته‌کردن سینتکس فهرست‌ها فهرست مرتب‌شده اولین آیتم دومین آیتم سومین آیتم فهرست مرتب‌نشده فهرست آیتم یک آیتم دیگه و یک آیتم دیگه فهرست تو در تو میوه سیب پرتقال موز لبنیات شیر پنیر عکس‌ها با توضیحات:\nیک چشم‌انداز Unsplash نقل‌قول بالا گزیده‌ای از سخنرانی راب پایک در Gopherfest، در تاریخ ۲۷ آبان ۱۳۹۴ است. ↩︎","منابع-یادگیری#منابع یادگیری":" راهنمای مارک‌داون برگه تقلب مارک‌داون آموزش مارک‌داون مرجع مارک‌داون ","پیکربندی#پیکربندی":"Hugo از Goldmark برای تجزیه مارک‌داون استفاده می‌کند. رندر مارک‌داون را می‌توان در hugo.yaml تحت markup.goldmark پیکربندی کنید. در زیر پیکربندی پیش‌فرض هگزترا را می‌توانید ببینید:\nhugo.yamlmarkup: goldmark: renderer: unsafe: true highlight: noClasses: false برای گزینه‌های پیکربندی بیشتر، به مستندات Hugo در پیکربندی نشانه‌گذاری مراجعه کنید."},"title":"مارک‌داون"},"/docs/guide/markdown/":{"data":{"":"Hugo 支持 Markdown 来书写内容，创建列表等。本页将向你展示一些最常见的 Markdown 语法示例。","markdown-示例#Markdown 示例":"文本样式 Style Syntax Example Output Bold **bold text** **bold text** bold text Italic *italicized text* `italicized text italicized text Strikethrough ~~strikethrough text~~ ~~strikethrough text~~ strikethrough text Subscript \u003csub\u003e\u003c/sub\u003e This is a \u003csub\u003esubscript\u003c/sub\u003e text This is a subscript text Superscript \u003csup\u003e\u003c/sup\u003e This is a \u003csup\u003esuperscript\u003c/sup\u003e text This is a superscript text 引用 带角标的块引用：\nDon’t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n表格 表格并非核心 Markdown 规范，但 Hugo 支持开箱即用的表格：\nName Age Bob 27 Alice 23 Markdown 表格中的内联 Italics Bold Code italics bold code 代码块 Syntax Highlighting 列表 有序列表 First item Second item Third item 无序列表 List item Another item And another item 嵌套列表 Fruit Apple Orange Banana Dairy Milk Cheese 图片 带有标题：\nUnsplash Landscape The above quote is excerpted from Rob Pike’s talk during Gopherfest, November 18, 2015. ↩︎","参考资料#参考资料":" Markdown Guide Markdown Cheatsheet Markdown Tutorial Markdown Reference ","配置#配置":"Hugo 使用 Goldmark 解析 Markdown。 Markdown 渲染可以在 hugo.yaml 中的 markup.goldmark 中配置。以下是Hextra的默认配置：\nhugo.yamlmarkup: goldmark: renderer: unsafe: true highlight: noClasses: false 如需了解更多选项，转至 Configure Markup。"},"title":"Markdown"},"/docs/guide/organize-files.fa/":{"data":{"":"","افزودن-تصاویر#افزودن تصاویر":"برای افزودن تصاویر، ساده‌ترین راه این است که پرونده‌های عکس‌ها را در همان دایرکتوری پرونده مارک‌داون قرار دهید. برای مثال، یک پرونده عکس image.png را در کنار پرونده my-page.md اضافه کنید:\ncontent docs my-page.md image.png سپس، می‌توانید از سینتکس مارک‌داون زیر برای افزودن عکس به محتوا استفاده کنید:\ncontent/docs/my-page.md![](image.png) همچنین می‌توانید از ویژگی بسته‌های صفحه Hugo برای سازماندهی پرونده‌های عکس‌ها همراه با پرونده مارک‌داون استفاده کنید. برای رسیدن به این هدف، پرونده my-page.md را به یک دایرکتوری my-page تبدیل کنید و محتوا را در پرونده‌ای به نام index.md قرار دهید و پرونده‌های عکس‌ها را در دایرکتوری my-page قرار دهید:\ncontent docs my-page index.md image.png content/docs/my-page/index.md![](image.png) همچنین می‌توانید پرونده‌های عکس‌ها را در دایرکتوری static قرار دهید که عکس‌ها را برای همه صفحات در دسترس قرار می‌دهد:\nstatic images image.png content docs my-page.md توجه داشته باشید که مسیر عکس با یک اسلش / شروع می‌شود و نسبت به دایرکتوری استاتیک است:\ncontent/docs/my-page.md![](/images/image.png) ","ساختار-دایرکتوری#ساختار دایرکتوری":"به طور پیش‌فرض، Hugo پرونده‌های مارک‌داون را در فهرست content جستجو می‌کند و ساختار فهرست، ساختار خروجی نهایی وب‌سایت شما را تعیین می‌کند. همین سایت را به عنوان مثال در نظر بگیرید:\ncontent _index.md docs _index.md getting-started.md guide _index.md organize-files.md blog _index.md post-1.md هر یک از پرونده‌های _index.md صفحه اصلی هر بخش هستند که برای هر بخش مجزا است. سایر پرونده‌های مارک‌داون صفحه‌های معمولی دیگه‌ای هستند.\ncontent ├── _index.md // \u003c- / ├── docs │ ├── _index.md // \u003c- /docs/ │ ├── getting-started.md // \u003c- /docs/getting-started/ │ └── guide │ ├── _index.md // \u003c- /docs/guide/ │ └── organize-files.md // \u003c- /docs/guide/organize-files/ └── blog ├── _index.md // \u003c- /blog/ └── post-1.md // \u003c- /blog/post-1/ ","طرحبندیها#طرح‌بندی‌ها":"هگزترا سه طرح‌بندی برای انواع مختلف محتوا ارائه می‌کند:\nطرح‌بندی دایرکتوری ویژگی‌ها docs content/docs/ ایده‌آل برای مستندات ساختار یافته، مانند این بخش. blog content/blog/ برای نوشته‌های وبلاگ، با هر فهرست‌بندی و هم نمایش جزئیات مقاله. default همه دایرکتوری‌های دیگر مشاهده مقاله تک صفحه‌ای بدون نوار کناری. برای سفارشی کردن یک بخش برای منعکس کردن رفتار یک طرح داخلی، نوع طرح‌بندی مورد نظر را در قسمت بالایی قسمت _index.md` مشخص کنید.\ncontent/my-docs/_index.md--- title: مستندات من cascade: type: docs --- پیکربندی مثال بالا تضمین می‌کند که پرونده‌های محتوای در داخل content/my-docs/ به‌طور پیش‌فرض به عنوان مستندات (نوع docs) مورد استفاده قرار می‌گیرند.","ناوبری-نوار-کناری#ناوبری نوار کناری":"ناوبری نوار کناری به طور خودکار براساس حروف الفبا ایجاد می‌شود. برای پیکربندی دستی ترتیب نوار کناری، می‌توانید از پارامتر weight در قسمت بالایی پرونده‌های مارک‌داون استفاده کنید.\ncontent/docs/guide/_index.md--- title: راهنما weight: 2 --- ℹ️ توصیه می‌کنیم نوار کناری خیلی عمیق نباشد. اگر محتوای زیادی دارید، آنها را به چند بخش تقسیم کنید. ","پیکربندی-دایرکتوری-محتوا#پیکربندی دایرکتوری محتوا":"به طور پیش‌فرض، دایرکتوری ریشه content/ توسط Hugo برای ساخت سایت استفاده می‌شود. اگر نیاز به استفاده از دایرکتوری متفاوتی برای محتوا دارید، برای مثال docs/، این کار را می‌توانید با تنظیم پارامتر contentDir در پیکربندی سایت hugo.yaml انجام دهید."},"title":"سازماندهی پرونده‌ها"},"/docs/guide/organize-files/":{"data":{"":"","侧边栏导航#侧边栏导航":"侧边栏导航是根据内容组织的字母顺序自动生成的。要手动配置侧边栏顺序，可以在 Markdown 文件的 frontmatter 中使用 weight 配置。\ncontent/docs/guide/_index.md--- title: Guide weight: 2 --- ℹ️ 建议侧边栏不要太深。如果内容太多，请考虑 将它们分成多个部分。 ","目录结构#目录结构":"默认情况下，Hugo 在 context 目录中搜索 Markdown 文件，目录的结构决定了网站的最终输出结构。 以示例网站为例：\ncontent _index.md docs _index.md getting-started.md guide _index.md organize-files.md blog _index.md post-1.md 每个 _index.md 文件都是相应部分的索引页，其他 Markdown 文件则是常规页面。\ncontent ├── _index.md // \u003c- / ├── docs │ ├── _index.md // \u003c- /docs/ │ ├── getting-started.md // \u003c- /docs/getting-started/ │ └── guide │ ├── _index.md // \u003c- /docs/guide/ │ └── organize-files.md // \u003c- /docs/guide/organize-files/ └── blog ├── _index.md // \u003c- /blog/ └── post-1.md // \u003c- /blog/post-1/ ","配置内容目录#配置内容目录":"如果需要为的内容使用不同的目录，可以在站点配置文件中设置 contentDir 来实现。"},"title":"目录结构"},"/docs/guide/shortcodes/":{"data":{"":"Hugo 短代码 是你的内容文件中调用内置或自定义模板的简单片段。\nHextra 提供了一系列美观的短代码以增强你的内容。\n注意事项 卡片 文件树 图标 步骤 标签 "},"title":"短代码"},"/docs/guide/shortcodes/_index.fa/":{"data":{"":"کدهای کوتاه Hugo قطعه‌های ساده‌ای در داخل پرونده‌های محتوای شما هستند که قالب‌های داخلی یا سفارشی را فراخوانی می‌کنند.\nهگزترا مجموعه‌ای از کدهای کوتاه زیبا را برای بهبود محتوای شما ارائه می‌کند.\nFileTree آیکون جزئیات زبانه‌ها فراخوانی کارت‌ها مراحل "},"title":"کدهای کوتاه"},"/docs/guide/shortcodes/callout.fa/":{"data":{"":"یک کامپوننت داخلی برای نشان دادن اطلاعات مهم به خواننده.","استفاده#استفاده":"پیش‌فرض 🌐 Hugo را می‌توانید برای ایجاد طیف گسترده‌ای از وب‌سایت‌ها، از جمله وبلاگ‌ها، نمونه‌کارها، سایت‌های مستندسازی و غیره استفاده کرد. {{\u003c callout emoji=\"🌐\" \u003e}} Hugo را می‌توانید برای ایجاد طیف گسترده‌ای از وب‌سایت‌ها، از جمله وبلاگ‌ها، نمونه‌کارها، سایت‌های مستندسازی و غیره استفاده کرد. {{\u003c /callout \u003e}} اطلاعات ℹ️ لطفا برای مشاهده آخرین نسخه‌ها به گیت‌هاب مراجعه کنید. {{\u003c callout type=\"info\" \u003e}} لطفا برای مشاهده آخرین نسخه‌ها به گیت‌هاب مراجعه کنید. {{\u003c /callout \u003e}} هشدار ⚠️ این API در نسخه بعدی منسوخ خواهد شد. {{\u003c callout type=\"warning\" \u003e}} این API در نسخه بعدی منسوخ خواهد شد. {{\u003c /callout \u003e}} خطا 🚫 مشکلی پیش آمد و اتفاقی رخ خواهد شد. {{\u003c callout type=\"error\" \u003e}} مشکلی پیش آمد و اتفاقی رخ خواهد شد. {{\u003c /callout \u003e}} ","مثال#مثال":" 👾 فراخوانی یک متن کوتاه است که برای جلب توجه در نظر گرفته شده است. ℹ️ فراخوانی یک متن کوتاه است که برای جلب توجه در نظر گرفته شده است. ⚠️ فراخوانی یک متن کوتاه است که برای جلب توجه در نظر گرفته شده است. 🚫 فراخوانی یک متن کوتاه است که برای جلب توجه در نظر گرفته شده است. "},"title":"فراخوانی"},"/docs/guide/shortcodes/callout/":{"data":{"":"向读者显示重要信息的内置组件。","example#Example":" 👾 标注是一段旨在吸引注意力的短文本 ℹ️ 标注是一段旨在吸引注意力的短文本。 ⚠️ 标注是一段旨在吸引注意力的短文本。 🚫 标注是一段旨在吸引注意力的短文本。 ","usage#Usage":"Default 🌐 Hugo 可用于创建各种网站，包括博客、作品集、文档网站等 {{\u003c callout emoji=\"🌐\" \u003e}} Hugo 可用于创建各种网站，包括博客、作品集、文档网站等 {{\u003c /callout \u003e}} Info ℹ️ 请访问 GitHub 查看最新版本 {{\u003c callout type=\"info\" \u003e}} 请访问 GitHub 查看最新版本 {{\u003c /callout \u003e}} Warning ⚠️ 该 API 将在下一版本中弃用 {{\u003c callout type=\"warning\" \u003e}} **标注**是一段旨在吸引注意力的简短文字 {{\u003c /callout \u003e}} Error 🚫 出问题了，要爆炸了 {{\u003c callout type=\"error\" \u003e}} 出问题了，要爆炸了 {{\u003c /callout \u003e}} "},"title":"标注"},"/docs/guide/shortcodes/cards.fa/":{"data":{"":"","استفاده#استفاده":" {{\u003c/* cards */\u003e}} {{\u003c/* card link=\"../callout\" title=\"فراخوانی\" icon=\"warning\" */\u003e}} {{\u003c/* card link=\"/fa\" title=\"بدون آیکون\" */\u003e}} {{\u003c/* /cards */\u003e}} {{\u003c/* cards */\u003e}} {{\u003c/* card link=\"/\" title=\"کارت تصویر\" image=\"https://source.unsplash.com/featured/800x600?landscape\" subtitle=\"یک چشم‌انداز Unsplash\" */\u003e}} {{\u003c/* card link=\"/\" title=\"تصویر محلی\" image=\"/images/card-image-unprocessed.jpg\" subtitle=\"تصویر خام در دایرکتوری استاتیک است.\" */\u003e}} {{\u003c/* card link=\"/\" title=\"تصویر محلی\" image=\"images/space.jpg\" subtitle=\"تصویر در دایرکتوری assets می‌باشد و پردازش توسط Hugo شده است.\" method=\"Resize\" options=\"600x q80 webp\" */\u003e}} {{\u003c/* /cards */\u003e}} ","مثال#مثال":" فراخوانی بدون آیکون کارت تصویریک چشم‌انداز Unsplash تصویر محلیتصویر خام در دایرکتوری استاتیک است. تصویر محلیتصویر در دایرکتوری assets می‌باشد و پردازش توسط Hugo شده است. ","پارامترهای-کارت#پارامترهای کارت":" پارامتر توضیحات link نشانی اینترنتی (داخلی یا خارجی). title عنوان برای کارت. subtitle عنوان زیرنویس (از مارک‌داون پشتیبانی می‌کند).. icon نام آیکون. ","کارت-تصویر#کارت تصویر":"علاوه بر این، کارت از افزودن تصویر و پردازش از طریق این پارامترها پشتیبانی می‌کند:\nپارامتر توضیحات image نشانی اینترنتی تصویر کارت را مشخص می‌کند. method روش پردازش تصویر Hugo را تنظیم می‌کند. options گزینه‌های پردازش تصویر Hugo را پیکربندی می‌کند. کارت از سه نوع تصویر پشتیبانی می‌کند:\nتصویر از راه دور: نشانی اینترنتی کامل در پارامتر image. تصویر استاتیک: از مسیر نسبی در دایرکتوری static/ Hugo استفاده کنید. تصویر پردازش شده: از مسیر نسبی در دایرکتوری assets/ Hugo استفاده کنید. هگزترا در صورت نیاز به پردازش تصویر در حین ساخت، به طور خودکار تشخیص می‌دهد و پارامتر options یا تنظیمات پیش‌فرض را اعمال می‌کند (تغییر اندازه، 800x، کیفیت 80، فرمت WebP). در حال حاضر این method را پشتیبانی می‌کند: Resize، Fit، Fill و Crop.\nبرای اطلاعات بیشتر در مورد دستورات، روش‌ها و گزینه‌های پردازش تصویر داخلی Hugo به مستندات پردازش تصویر آن‌ها مراجعه کنید."},"title":"کارت‌ها"},"/docs/guide/shortcodes/cards/":{"data":{"":"","image-card#Image Card":"此外，该卡还支持通过以下参数添加图像和处理：\nParameter Description image 指定卡片的图像 URL. method 设置 Hugo 的图像处理方法。 options 配置 Hugo 的图像处理选项。 卡片支持三种图像：\n远程图片：完整网址应放置在 image 参数中 静态图片：使用 Hugo 的 static/ 目录中的相对路径 处理过的图片：使用 Hugo 的 assets/ 目录中的相对路径 Hextra 在构建过程中会自动检测图片是否需要处理，并根据需要应用 options 参数或默认设置（缩放，800x，质量 80，WebP 格式）。\n它目前支持以下处理方法：Resize（缩放）、Fit（适应）、Fill（填充）和 Crop（裁剪）。\n有关 Hugo 内置图像处理命令、方法和选项的更多信息，请参阅他们的 Image Processing Documentation.","使用#使用":" {{\u003c/* cards */\u003e}} {{\u003c/* card link=\"../callout\" title=\"Callout\" icon=\"warning\" */\u003e}} {{\u003c/* card link=\"/\" title=\"No Icon\" */\u003e}} {{\u003c/* /cards */\u003e}} {{\u003c/* cards */\u003e}} {{\u003c/* card link=\"/\" title=\"Image Card\" image=\"https://source.unsplash.com/featured/800x600?landscape\" subtitle=\"Unsplash Landscape\" */\u003e}} {{\u003c/* card link=\"/\" title=\"Local Image\" image=\"/images/card-image-unprocessed.jpg\" subtitle=\"Raw image under static directory.\" */\u003e}} {{\u003c/* card link=\"/\" title=\"Local Image\" image=\"images/space.jpg\" subtitle=\"Image under assets directory, processed by Hugo.\" method=\"Resize\" options=\"600x q80 webp\" */\u003e}} {{\u003c/* /cards */\u003e}} ","卡片参数#卡片参数":" Parameter Description link URL（内部或外部） title 卡片的标题 subtitle 字幕标题（支持 Markdown） icon 图标的名称 ","示例#示例":" Callout No Icon Image CardUnsplash Landscape Local ImageRaw image under static directory. Local ImageImage under assets directory, processed by Hugo. "},"title":"Cards"},"/docs/guide/shortcodes/details.fa/":{"data":{"":"یک کامپوننت داخلی برای نمایش محتوای قابل باز و بسته شدن.","استفاده#استفاده":" {{%/* details title=\"جزئیات\" */%}} این محتوای جزئیات است. مارک‌داون **پشتیبانی می‌شود**. {{%/* /details */%}} {{%/* details title=\"برای نمایش روی من کلیک کنید\"closed=\"true\" */%}} این به طور پیش‌فرض پنهان می‌شود. {{%/* /details */%}} ","مثال#مثال":" جزئیات این محتوای جزئیات است.\nمارک‌داون پشتیبانی می‌شود.\nبرای نمایش روی من کلیک کنید این به طور پیش‌فرض پنهان می‌شود. "},"title":"جزئیات"},"/docs/guide/shortcodes/details/":{"data":{"":"用于显示可折叠内容的内置组件。","usage#Usage":" {{%/* details title=\"Details\" */%}} 这是细节的内容 **支持** Markdown {{%/* /details */%}} {{%/* details title=\"Click me to reveal\" closed=\"true\" */%}} 默认情况下这将被隐藏 {{%/* /details */%}} ","示例#示例":" Details 这是细节的内容\nMarkdown is supported.\nClick me to reveal 默认情况下这将被隐藏 "},"title":"详情"},"/docs/guide/shortcodes/filetree.fa/":{"data":{"":"","استفاده#استفاده":" Markdown{{\u003c/* filetree/container */\u003e}} {{\u003c/* filetree/folder name=\"content\" */\u003e}} {{\u003c/* filetree/file name=\"_index.md\" */\u003e}} {{\u003c/* filetree/folder name=\"docs\" state=\"closed\" */\u003e}} {{\u003c/* filetree/file name=\"_index.md\" */\u003e}} {{\u003c/* filetree/file name=\"introduction.md\" */\u003e}} {{\u003c/* filetree/file name=\"introduction.fa.md\" */\u003e}} {{\u003c/* /filetree/folder */\u003e}} {{\u003c/* /filetree/folder */\u003e}} {{\u003c/* filetree/file name=\"hugo.toml\" */\u003e}} {{\u003c/* /filetree/container */\u003e}} ","مثال#مثال":" content _index.md docs _index.md introduction.md introduction.fa.md hugo.toml "},"title":"FileTree"},"/docs/guide/shortcodes/filetree/":{"data":{"":"","用法#用法":" Markdown{{\u003c/* filetree/container */\u003e}} {{\u003c/* filetree/folder name=\"content\" */\u003e}} {{\u003c/* filetree/file name=\"_index.md\" */\u003e}} {{\u003c/* filetree/folder name=\"docs\" state=\"closed\" */\u003e}} {{\u003c/* filetree/file name=\"_index.md\" */\u003e}} {{\u003c/* filetree/file name=\"introduction.md\" */\u003e}} {{\u003c/* filetree/file name=\"introduction.fr.md\" */\u003e}} {{\u003c/* /filetree/folder */\u003e}} {{\u003c/* /filetree/folder */\u003e}} {{\u003c/* filetree/file name=\"hugo.toml\" */\u003e}} {{\u003c/* /filetree/container */\u003e}} ","示例#示例":" content _index.md docs _index.md introduction.md introduction.fr.md hugo.toml "},"title":"文件树"},"/docs/guide/shortcodes/icon.fa/":{"data":{"":"برای استفاده از این کد کوتاه درون‌خطی، باید آن را در پیکربندی فعال کنید:\nhugo.yamlenableInlineShortcodes: true فهرست آیکون‌های موجود را می‌توانید در data/icons.yaml پیدا کنید.","استفاده#استفاده":" {{\u003c/* icon \"github\" */\u003e}} آیکون‌های با طرح‌های متفاوت در Heroicons نسخه ۱ خارج از جعبه در دسترس هستند.\nچجوری آیکون‌های خودمان را اضافه کنیم پرونده data/icons.yaml را ایجاد کنید، سپس آیکون‌های SVG خود را در فرمت زیر اضافه کنید:\ndata/icons.yamlyour-icon: \u003csvg\u003eyour icon svg content\u003c/svg\u003e سپس می‌توان آن را در کد کوتاه مانند زیر استفاده کرد:\n{{\u003c/* icon \"your-icon\" */\u003e}} {{\u003c/* card icon=\"your-icon\" */\u003e}} نکته: Iconify Design مکانی عالی برای پیدا کردن آیکون‌های SVG برای سایت شما است.","مثال#مثال":" "},"title":"آیکون"},"/docs/guide/shortcodes/icon/":{"data":{"":"要内联使用此短代码，需要在配置中启用内联短代码：\nhugo.yamlenableInlineShortcodes: true 可用图标列表可以在以下位置找到 data/icons.yaml.","用法#用法":" {{\u003c/* icon \"github\" */\u003e}} Heroicons v1 轮廓图标开箱即用\n如何添加自己的图标 创建 data/icons.yaml 文件，然后按以下格式添加您自己的 SVG 图标：\ndata/icons.yamlyour-icon: \u003csvg\u003eyour icon svg content\u003c/svg\u003e 然后可以在短代码中使用它，如下所示：\n{{\u003c/* icon \"your-icon\" */\u003e}} {{\u003c/* card icon=\"your-icon\" */\u003e}} 提示：Iconify Design 是为您的网站查找 SVG 图标的好地方","示例#示例":" "},"title":"图标"},"/docs/guide/shortcodes/steps.fa/":{"data":{"":"یک کامپوننت داخلی برای نمایش یک سری مراحل.","استفاده#استفاده":"سرتیتر مارک‌داون h3 را در کد کوتاه steps قرار دهید.\n{{%/* steps */%}} ### مرحله ۱ این اولین مرحله است. ### مرحله ۲ این دومین مرحله است. {{%/* /steps */%}} ","مثال#مثال":" مرحله ۱ این اولین مرحله است.\nمرحله ۲ این دومین مرحله است.\nمرحله ۳ این سومین مرحله است."},"title":"مراحل"},"/docs/guide/shortcodes/steps/":{"data":{"":"A built-in component to display a series of steps.","使用#使用":"将 Markdown h3 标题放入 steps 短代码中。\n{{%/* steps */%}} ### Step 1 This is the first step. ### Step 2 This is the second step. {{%/* /steps */%}} ","示例#示例":" 第一步 这是第一步。\n第二步 这是第二步。\n第三步 这是第三步。"},"title":"步骤"},"/docs/guide/shortcodes/tabs.fa/":{"data":{"":"","استفاده#استفاده":"پیش‌فرض {{\u003c tabs items=\"JSON,YAML,TOML\" \u003e}} {{\u003c tab \u003e}}**JSON**: جیسون معادل اختصاری عبارت JavaScript Object Notation به معنی «نمادگذاری اشیا در جاوا اسکریپت» است. جیسون یک قالب استاندارد باز است که امکان تبادل داده‌ها در وب با استفاده از جفت‌های خصوصیت-کلید را ممکن ساخته است.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**YAML**: یک زبان برای سریال‌سازی داده قابل-خواندن-برای-انسان است.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**TOML**: یک قالب پرونده پیکربندی که به هدف سادگی در خوانایی به کمک داشتن معانی مشخص با هدف «کمینه» و مینیمال بودن ارائه شده است.{{\u003c /tab \u003e}} {{\u003c /tabs \u003e}} مشخص کردن زبانه‌ پیش‌فرض از ویژگی defaultIndex برای مشخص کردن زبانه‌ پیش‌فرض استفاده کنید. این شاخص از 0 شروع می‌شود.\n{{\u003c tabs items=\"JSON,YAML,TOML\" defaultIndex=\"1\" \u003e}} {{\u003c tab \u003e}}**JSON**: جیسون معادل اختصاری عبارت JavaScript Object Notation به معنی «نمادگذاری اشیا در جاوا اسکریپت» است. جیسون یک قالب استاندارد باز است که امکان تبادل داده‌ها در وب با استفاده از جفت‌های خصوصیت-کلید را ممکن ساخته است.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**YAML**: یک زبان برای سریال‌سازی داده قابل-خواندن-برای-انسان است.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**TOML**: یک قالب پرونده پیکربندی که به هدف سادگی در خوانایی به کمک داشتن معانی مشخص با هدف «کمینه» و مینیمال بودن ارائه شده است.{{\u003c /tab \u003e}} {{\u003c /tabs \u003e}} زبانه‌ YAML به طور پیش‌فرض انتخاب می‌شود.\nJSONYAMLTOML JSON: جیسون معادل اختصاری عبارت JavaScript Object Notation به معنی «نمادگذاری اشیا در جاوا اسکریپت» است. جیسون یک قالب استاندارد باز است که امکان تبادل داده‌ها در وب با استفاده از جفت‌های خصوصیت-کلید را ممکن ساخته است. YAML: یک زبان برای سریال‌سازی داده قابل-خواندن-برای-انسان است. TOML: یک قالب پرونده پیکربندی که به هدف سادگی در خوانایی به کمک داشتن معانی مشخص با هدف «کمینه» و مینیمال بودن ارائه شده است. استفاده از مارک‌داون سینتکس مارک‌داون از جمله بلوک کد نیز پشتیبانی می‌شود:\n{{\u003c tabs items=\"JSON,YAML,TOML\" \u003e}} {{\u003c tab \u003e}} ```json { \"سلام\": \"دنیا\" } ``` {{\u003c /tab \u003e}} ... زبانه‌های دیگر را به همین ترتیب اضافه کنید {{\u003c /tabs \u003e}} JSONYAMLTOML { \"سلام\": \"دنیا\" } سلام: دنیا سلام = \"دنیا\" ","مثال#مثال":"JSONYAMLTOML JSON: جیسون معادل اختصاری عبارت JavaScript Object Notation به معنی «نمادگذاری اشیا در جاوا اسکریپت» است. جیسون یک قالب استاندارد باز است که امکان تبادل داده‌ها در وب با استفاده از جفت‌های خصوصیت-کلید را ممکن ساخته است. YAML: یک زبان برای سریال‌سازی داده قابل-خواندن-برای-انسان است. TOML: یک قالب پرونده پیکربندی که به هدف سادگی در خوانایی به کمک داشتن معانی مشخص با هدف «کمینه» و مینیمال بودن ارائه شده است. "},"title":"زبانه‌ها"},"/docs/guide/shortcodes/tabs/":{"data":{"":"","使用#使用":"默认情况下 {{\u003c tabs items=\"JSON,YAML,TOML\" \u003e}} {{\u003c tab \u003e}}**JSON**: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**YAML**: YAML is a human-readable data serialization language.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**TOML**: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.{{\u003c /tab \u003e}} {{\u003c /tabs \u003e}} 指定索引 使用 defaultIndex 属性指定选定的选项卡。索引从 0 开始。\n{{\u003c tabs items=\"JSON,YAML,TOML\" defaultIndex=\"1\" \u003e}} {{\u003c tab \u003e}}**JSON**: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**YAML**: YAML is a human-readable data serialization language.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**TOML**: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.{{\u003c /tab \u003e}} {{\u003c /tabs \u003e}} 默认为 YAML\nJSONYAMLTOML JSON: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax. YAML: YAML is a human-readable data serialization language. TOML: TOML aims to be a minimal configuration file format that’s easy to read due to obvious semantics. 使用 Markdown 还支持包括代码块的 Markdown 语法：\n{{\u003c tabs items=\"JSON,YAML,TOML\" \u003e}} {{\u003c tab \u003e}} ```json { \"hello\": \"world\" } ``` {{\u003c /tab \u003e}} ... add other tabs similarly {{\u003c /tabs \u003e}} JSONYAMLTOML { \"hello\": \"world\" } hello: world hello = \"world\" ","示例#示例":"JSONYAMLTOML JSON: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax. YAML: YAML is a human-readable data serialization language. TOML: TOML aims to be a minimal configuration file format that’s easy to read due to obvious semantics. "},"title":"标签页"},"/docs/guide/syntax-highlighting.fa/":{"data":{"":"هیوگو از Chroma، یک برجسته‌کننده سینتکس عمومی در Go خالص، برای برجسته‌سازی کردن سینتکس استفاده می‌کند. توصیه می‌شود از بک‌تیک برای بلوک‌های کد در محتوای مارک‌داون استفاده کنید. مثلا:\nMarkdown```python def say_hello(): print(\"سلام!\") ``` به صورت زیر رندر خواهد شد:\ndef say_hello(): print(\"سلام!\") ","زبانهای-پشتیبانی-شده#زبان‌های پشتیبانی شده":"برای مشاهده فهرست زبان‌های پشتیبانی شده، لطفا به مستندات Chroma مراجعه کنید.","ویژگیها#ویژگی‌ها":"Filename برای افزودن نام پرونده یا عنوان به بلوک کد، filename را مشخص کنید:\nMarkdown```python {filename=\"hello.py\"} def say_hello(): print(\"سلام!\") ``` hello.pydef say_hello(): print(\"سلام!\") شماره خطوط برای تنظیم شماره خطوط، ویژگی linenos را روی table قرار دهید و به صورت اختیاری linenostart را روی شماره‌ای که خط شروع می‌شود تنظیم کنید:\nMarkdown```python {linenos=table,linenostart=42} def say_hello(): print(\"سلام!\") ``` 42 43 def say_hello(): print(\"سلام!\") برجسته کردن خطوط برای برجسته کردن خطوط، ویژگی hl_lines را به فهرستی از شماره خطوط تنظیم کنید:\nMarkdown```python {linenos=table,hl_lines=[2,4],linenostart=1,filename=\"hello.py\"} def say_hello(): print(\"سلام!\") def main(): say_hello() ``` hello.py 1 2 3 4 5 def say_hello(): print(\"سلام!\") def main(): say_hello() دکمه کپی به طور پیش‌فرض، دکمه کپی برای بلوک‌های کد فعال است."},"title":"برجسته‌کردن سینتکس"},"/docs/guide/syntax-highlighting/":{"data":{"":"Hugo 使用 Chroma，一种纯 Golang 实现的代码高亮渲染器。 建议对 Markdown 内容中的代码块使用反引号，例如：\nMarkdown```python def say_hello(): print(\"Hello!\") ``` 将呈现为：\ndef say_hello(): print(\"Hello!\") ","支持的编程语言#支持的编程语言":"如需了解支持的编程语言，转至 Chroma’s documentation。","特性#特性":"文件名 要向代码块添加文件名或标题，请设置 filename：\nMarkdown```python {filename=\"hello.py\"} def say_hello(): print(\"Hello!\") ``` hello.pydef say_hello(): print(\"Hello!\") 行号 如需设置行号，将 linenos 设置为 table，并将 linenostart 设置为起始行号：\nMarkdown```python {linenos=table,linenostart=42} def say_hello(): print(\"Hello!\") ``` 42 43 def say_hello(): print(\"Hello!\") 高亮行 显示高亮行，设置 hl_lines 为行号：\nMarkdown```python {linenos=table,hl_lines=[2,4],linenostart=1,filename=\"hello.py\"} def say_hello(): print(\"Hello!\") def main(): say_hello() ``` hello.py 1 2 3 4 5 def say_hello(): print(\"Hello!\") def main(): say_hello() 复制按钮 默认情况下，代码块复制按钮已自动启用。"},"title":"代码高亮"},"/showcase/":{"data":{"":" 由 Hextra 驱动的开源网站和项目。 Stanford CS 40 Helix Docs Clever Cloud Documentation OWASP AI Security and Privacy Guide Osuny Porter HITSZ OpenAuto LutheranConfessions Hextra Starter Template "},"title":"项目展示"}}